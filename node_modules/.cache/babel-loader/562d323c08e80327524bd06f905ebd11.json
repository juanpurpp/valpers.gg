{"ast":null,"code":"import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, renderSlot } from 'vue';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst __default__ = defineComponent({\n  name: \"ElAside\"\n});\n\nconst _sfc_main = /* @__PURE__ */defineComponent({ ...__default__,\n  props: {\n    width: {\n      type: String,\n      default: null\n    }\n  },\n\n  setup(__props) {\n    const props = __props;\n    const ns = useNamespace(\"aside\");\n    const style = computed(() => props.width ? ns.cssVarBlock({\n      width: props.width\n    }) : {});\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"aside\", {\n        class: normalizeClass(unref(ns).b()),\n        style: normalizeStyle(unref(style))\n      }, [renderSlot(_ctx.$slots, \"default\")], 6);\n    };\n  }\n\n});\n\nvar Aside = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/container/src/aside.vue\"]]);\n\nexport { Aside as default };","map":{"version":3,"mappings":";;;;;mCAWc;EACZA,IAAM;AADM;;;;;;;;;;;;IAUR,WAAKC,aAAa,OAAb,CAAL;IACN,MAAMC,KAAQ,YACZ,MACGC,MAAMC,KAAN,GAAcC,EAAG,YAAH,CAAe;MAAED,OAAOD,KAAM;IAAf,CAAf,CAAd,GAAuD,EAF9C,CAAd","names":["name","useNamespace","style","props","width","ns"],"sources":["../../../../../../packages/components/container/src/aside.vue"],"sourcesContent":["<template>\n  <aside :class=\"ns.b()\" :style=\"style\">\n    <slot />\n  </aside>\n</template>\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElAside',\n})\nconst props = defineProps({\n  width: {\n    type: String,\n    default: null,\n  },\n})\n\nconst ns = useNamespace('aside')\nconst style = computed(\n  () =>\n    (props.width ? ns.cssVarBlock({ width: props.width }) : {}) as CSSProperties\n)\n</script>\n"]},"metadata":{},"sourceType":"module"}