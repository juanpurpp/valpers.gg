{"ast":null,"code":"import { defineComponent, markRaw, ref, effectScope, shallowRef, computed, watch, nextTick, onMounted, openBlock, createBlock, Teleport, createVNode, Transition, withCtx, createElementVNode, normalizeClass, unref, normalizeStyle, withModifiers, createCommentVNode, createElementBlock, Fragment, resolveDynamicComponent, renderList, withDirectives, vShow, renderSlot } from 'vue';\nimport { isNumber, useEventListener } from '@vueuse/core';\nimport { throttle } from 'lodash-unified';\nimport '../../../hooks/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { FullScreen, ScaleToOriginal, Close, ArrowLeft, ArrowRight, ZoomOut, ZoomIn, RefreshLeft, RefreshRight } from '@element-plus/icons-vue';\nimport { imageViewerProps, imageViewerEmits } from './image-viewer.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { isFirefox } from '../../../utils/browser.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useZIndex } from '../../../hooks/use-z-index/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { keysOf } from '../../../utils/objects.mjs';\nconst _hoisted_1 = [\"src\"];\n\nconst __default__ = defineComponent({\n  name: \"ElImageViewer\"\n});\n\nconst _sfc_main = /* @__PURE__ */defineComponent({ ...__default__,\n  props: imageViewerProps,\n  emits: imageViewerEmits,\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const modes = {\n      CONTAIN: {\n        name: \"contain\",\n        icon: markRaw(FullScreen)\n      },\n      ORIGINAL: {\n        name: \"original\",\n        icon: markRaw(ScaleToOriginal)\n      }\n    };\n    const mousewheelEventName = isFirefox() ? \"DOMMouseScroll\" : \"mousewheel\";\n    const {\n      t\n    } = useLocale();\n    const ns = useNamespace(\"image-viewer\");\n    const {\n      nextZIndex\n    } = useZIndex();\n    const wrapper = ref();\n    const imgRefs = ref([]);\n    const scopeEventListener = effectScope();\n    const loading = ref(true);\n    const activeIndex = ref(props.initialIndex);\n    const mode = shallowRef(modes.CONTAIN);\n    const transform = ref({\n      scale: 1,\n      deg: 0,\n      offsetX: 0,\n      offsetY: 0,\n      enableTransition: false\n    });\n    const isSingle = computed(() => {\n      const {\n        urlList\n      } = props;\n      return urlList.length <= 1;\n    });\n    const isFirst = computed(() => {\n      return activeIndex.value === 0;\n    });\n    const isLast = computed(() => {\n      return activeIndex.value === props.urlList.length - 1;\n    });\n    const currentImg = computed(() => {\n      return props.urlList[activeIndex.value];\n    });\n    const imgStyle = computed(() => {\n      const {\n        scale,\n        deg,\n        offsetX,\n        offsetY,\n        enableTransition\n      } = transform.value;\n      let translateX = offsetX / scale;\n      let translateY = offsetY / scale;\n\n      switch (deg % 360) {\n        case 90:\n        case -270:\n          ;\n          [translateX, translateY] = [translateY, -translateX];\n          break;\n\n        case 180:\n        case -180:\n          ;\n          [translateX, translateY] = [-translateX, -translateY];\n          break;\n\n        case 270:\n        case -90:\n          ;\n          [translateX, translateY] = [-translateY, translateX];\n          break;\n      }\n\n      const style = {\n        transform: `scale(${scale}) rotate(${deg}deg) translate(${translateX}px, ${translateY}px)`,\n        transition: enableTransition ? \"transform .3s\" : \"\"\n      };\n\n      if (mode.value.name === modes.CONTAIN.name) {\n        style.maxWidth = style.maxHeight = \"100%\";\n      }\n\n      return style;\n    });\n    const computedZIndex = computed(() => {\n      return isNumber(props.zIndex) ? props.zIndex : nextZIndex();\n    });\n\n    function hide() {\n      unregisterEventListener();\n      emit(\"close\");\n    }\n\n    function registerEventListener() {\n      const keydownHandler = throttle(e => {\n        switch (e.code) {\n          case EVENT_CODE.esc:\n            props.closeOnPressEscape && hide();\n            break;\n\n          case EVENT_CODE.space:\n            toggleMode();\n            break;\n\n          case EVENT_CODE.left:\n            prev();\n            break;\n\n          case EVENT_CODE.up:\n            handleActions(\"zoomIn\");\n            break;\n\n          case EVENT_CODE.right:\n            next();\n            break;\n\n          case EVENT_CODE.down:\n            handleActions(\"zoomOut\");\n            break;\n        }\n      });\n      const mousewheelHandler = throttle(e => {\n        const delta = e.wheelDelta ? e.wheelDelta : -e.detail;\n\n        if (delta > 0) {\n          handleActions(\"zoomIn\", {\n            zoomRate: 1.2,\n            enableTransition: false\n          });\n        } else {\n          handleActions(\"zoomOut\", {\n            zoomRate: 1.2,\n            enableTransition: false\n          });\n        }\n      });\n      scopeEventListener.run(() => {\n        useEventListener(document, \"keydown\", keydownHandler);\n        useEventListener(document, mousewheelEventName, mousewheelHandler);\n      });\n    }\n\n    function unregisterEventListener() {\n      scopeEventListener.stop();\n    }\n\n    function handleImgLoad() {\n      loading.value = false;\n    }\n\n    function handleImgError(e) {\n      loading.value = false;\n      e.target.alt = t(\"el.image.error\");\n    }\n\n    function handleMouseDown(e) {\n      if (loading.value || e.button !== 0 || !wrapper.value) return;\n      transform.value.enableTransition = false;\n      const {\n        offsetX,\n        offsetY\n      } = transform.value;\n      const startX = e.pageX;\n      const startY = e.pageY;\n      const dragHandler = throttle(ev => {\n        transform.value = { ...transform.value,\n          offsetX: offsetX + ev.pageX - startX,\n          offsetY: offsetY + ev.pageY - startY\n        };\n      });\n      const removeMousemove = useEventListener(document, \"mousemove\", dragHandler);\n      useEventListener(document, \"mouseup\", () => {\n        removeMousemove();\n      });\n      e.preventDefault();\n    }\n\n    function reset() {\n      transform.value = {\n        scale: 1,\n        deg: 0,\n        offsetX: 0,\n        offsetY: 0,\n        enableTransition: false\n      };\n    }\n\n    function toggleMode() {\n      if (loading.value) return;\n      const modeNames = keysOf(modes);\n      const modeValues = Object.values(modes);\n      const currentMode = mode.value.name;\n      const index = modeValues.findIndex(i => i.name === currentMode);\n      const nextIndex = (index + 1) % modeNames.length;\n      mode.value = modes[modeNames[nextIndex]];\n      reset();\n    }\n\n    function setActiveItem(index) {\n      const len = props.urlList.length;\n      activeIndex.value = (index + len) % len;\n    }\n\n    function prev() {\n      if (isFirst.value && !props.infinite) return;\n      setActiveItem(activeIndex.value - 1);\n    }\n\n    function next() {\n      if (isLast.value && !props.infinite) return;\n      setActiveItem(activeIndex.value + 1);\n    }\n\n    function handleActions(action, options = {}) {\n      if (loading.value) return;\n      const {\n        zoomRate,\n        rotateDeg,\n        enableTransition\n      } = {\n        zoomRate: 1.4,\n        rotateDeg: 90,\n        enableTransition: true,\n        ...options\n      };\n\n      switch (action) {\n        case \"zoomOut\":\n          if (transform.value.scale > 0.2) {\n            transform.value.scale = Number.parseFloat((transform.value.scale / zoomRate).toFixed(3));\n          }\n\n          break;\n\n        case \"zoomIn\":\n          if (transform.value.scale < 7) {\n            transform.value.scale = Number.parseFloat((transform.value.scale * zoomRate).toFixed(3));\n          }\n\n          break;\n\n        case \"clockwise\":\n          transform.value.deg += rotateDeg;\n          break;\n\n        case \"anticlockwise\":\n          transform.value.deg -= rotateDeg;\n          break;\n      }\n\n      transform.value.enableTransition = enableTransition;\n    }\n\n    watch(currentImg, () => {\n      nextTick(() => {\n        const $img = imgRefs.value[0];\n\n        if (!($img == null ? void 0 : $img.complete)) {\n          loading.value = true;\n        }\n      });\n    });\n    watch(activeIndex, val => {\n      reset();\n      emit(\"switch\", val);\n    });\n    onMounted(() => {\n      var _a, _b;\n\n      registerEventListener();\n      (_b = (_a = wrapper.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    });\n    expose({\n      setActiveItem\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(Teleport, {\n        to: \"body\",\n        disabled: !_ctx.teleported\n      }, [createVNode(Transition, {\n        name: \"viewer-fade\",\n        appear: \"\"\n      }, {\n        default: withCtx(() => [createElementVNode(\"div\", {\n          ref_key: \"wrapper\",\n          ref: wrapper,\n          tabindex: -1,\n          class: normalizeClass(unref(ns).e(\"wrapper\")),\n          style: normalizeStyle({\n            zIndex: unref(computedZIndex)\n          })\n        }, [createElementVNode(\"div\", {\n          class: normalizeClass(unref(ns).e(\"mask\")),\n          onClick: _cache[0] || (_cache[0] = withModifiers($event => _ctx.hideOnClickModal && hide(), [\"self\"]))\n        }, null, 2), createCommentVNode(\" CLOSE \"), createElementVNode(\"span\", {\n          class: normalizeClass([unref(ns).e(\"btn\"), unref(ns).e(\"close\")]),\n          onClick: hide\n        }, [createVNode(unref(ElIcon), null, {\n          default: withCtx(() => [createVNode(unref(Close))]),\n          _: 1\n        })], 2), createCommentVNode(\" ARROW \"), !unref(isSingle) ? (openBlock(), createElementBlock(Fragment, {\n          key: 0\n        }, [createElementVNode(\"span\", {\n          class: normalizeClass([unref(ns).e(\"btn\"), unref(ns).e(\"prev\"), unref(ns).is(\"disabled\", !_ctx.infinite && unref(isFirst))]),\n          onClick: prev\n        }, [createVNode(unref(ElIcon), null, {\n          default: withCtx(() => [createVNode(unref(ArrowLeft))]),\n          _: 1\n        })], 2), createElementVNode(\"span\", {\n          class: normalizeClass([unref(ns).e(\"btn\"), unref(ns).e(\"next\"), unref(ns).is(\"disabled\", !_ctx.infinite && unref(isLast))]),\n          onClick: next\n        }, [createVNode(unref(ElIcon), null, {\n          default: withCtx(() => [createVNode(unref(ArrowRight))]),\n          _: 1\n        })], 2)], 64)) : createCommentVNode(\"v-if\", true), createCommentVNode(\" ACTIONS \"), createElementVNode(\"div\", {\n          class: normalizeClass([unref(ns).e(\"btn\"), unref(ns).e(\"actions\")])\n        }, [createElementVNode(\"div\", {\n          class: normalizeClass(unref(ns).e(\"actions__inner\"))\n        }, [createVNode(unref(ElIcon), {\n          onClick: _cache[1] || (_cache[1] = $event => handleActions(\"zoomOut\"))\n        }, {\n          default: withCtx(() => [createVNode(unref(ZoomOut))]),\n          _: 1\n        }), createVNode(unref(ElIcon), {\n          onClick: _cache[2] || (_cache[2] = $event => handleActions(\"zoomIn\"))\n        }, {\n          default: withCtx(() => [createVNode(unref(ZoomIn))]),\n          _: 1\n        }), createElementVNode(\"i\", {\n          class: normalizeClass(unref(ns).e(\"actions__divider\"))\n        }, null, 2), createVNode(unref(ElIcon), {\n          onClick: toggleMode\n        }, {\n          default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(unref(mode).icon)))]),\n          _: 1\n        }), createElementVNode(\"i\", {\n          class: normalizeClass(unref(ns).e(\"actions__divider\"))\n        }, null, 2), createVNode(unref(ElIcon), {\n          onClick: _cache[3] || (_cache[3] = $event => handleActions(\"anticlockwise\"))\n        }, {\n          default: withCtx(() => [createVNode(unref(RefreshLeft))]),\n          _: 1\n        }), createVNode(unref(ElIcon), {\n          onClick: _cache[4] || (_cache[4] = $event => handleActions(\"clockwise\"))\n        }, {\n          default: withCtx(() => [createVNode(unref(RefreshRight))]),\n          _: 1\n        })], 2)], 2), createCommentVNode(\" CANVAS \"), createElementVNode(\"div\", {\n          class: normalizeClass(unref(ns).e(\"canvas\"))\n        }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.urlList, (url, i) => {\n          return withDirectives((openBlock(), createElementBlock(\"img\", {\n            ref_for: true,\n            ref: el => imgRefs.value[i] = el,\n            key: url,\n            src: url,\n            style: normalizeStyle(unref(imgStyle)),\n            class: normalizeClass(unref(ns).e(\"img\")),\n            onLoad: handleImgLoad,\n            onError: handleImgError,\n            onMousedown: handleMouseDown\n          }, null, 46, _hoisted_1)), [[vShow, i === activeIndex.value]]);\n        }), 128))], 2), renderSlot(_ctx.$slots, \"default\")], 6)]),\n        _: 3\n      })], 8, [\"disabled\"]);\n    };\n  }\n\n});\n\nvar ImageViewer = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/image-viewer/src/image-viewer.vue\"]]);\n\nexport { ImageViewer as default };","map":{"version":3,"mappings":"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","names":["name","modes","CONTAIN","icon","markRaw","FullScreen","ORIGINAL","ScaleToOriginal","isFirefox","t","useLocale","useNamespace","nextZIndex","useZIndex","wrapper","ref","scopeEventListener","effectScope","initialIndex","shallowRef","transform","scale","deg","offsetX","offsetY","enableTransition","computed","urlList","props","length","activeIndex","value","translateX","translateY","style","transition","mode","maxHeight","isNumber","zIndex","unregisterEventListener","emit","throttle","e","EVENT_CODE","closeOnPressEscape","hide","toggleMode","prev","handleActions","next","delta","zoomRate","run","useEventListener","keydownHandler","mousewheelEventName","mousewheelHandler","stop","loading","alt","button","startX","startY","ev","pageX","pageY","removeMousemove","document","dragHandler","preventDefault","keysOf","Object","index","modeValues","i","currentMode","modeNames","reset","len","setActiveItem","options","rotateDeg","Number","parseFloat","toFixed","watch","currentImg","nextTick","imgRefs","$img","val","onMounted","registerEventListener","expose"],"sources":["../../../../../../packages/components/image-viewer/src/image-viewer.vue"],"sourcesContent":["<template>\n  <teleport to=\"body\" :disabled=\"!teleported\">\n    <transition name=\"viewer-fade\" appear>\n      <div\n        ref=\"wrapper\"\n        :tabindex=\"-1\"\n        :class=\"ns.e('wrapper')\"\n        :style=\"{ zIndex: computedZIndex }\"\n      >\n        <div :class=\"ns.e('mask')\" @click.self=\"hideOnClickModal && hide()\" />\n\n        <!-- CLOSE -->\n        <span :class=\"[ns.e('btn'), ns.e('close')]\" @click=\"hide\">\n          <el-icon><Close /></el-icon>\n        </span>\n\n        <!-- ARROW -->\n        <template v-if=\"!isSingle\">\n          <span\n            :class=\"[\n              ns.e('btn'),\n              ns.e('prev'),\n              ns.is('disabled', !infinite && isFirst),\n            ]\"\n            @click=\"prev\"\n          >\n            <el-icon><ArrowLeft /></el-icon>\n          </span>\n          <span\n            :class=\"[\n              ns.e('btn'),\n              ns.e('next'),\n              ns.is('disabled', !infinite && isLast),\n            ]\"\n            @click=\"next\"\n          >\n            <el-icon><ArrowRight /></el-icon>\n          </span>\n        </template>\n        <!-- ACTIONS -->\n        <div :class=\"[ns.e('btn'), ns.e('actions')]\">\n          <div :class=\"ns.e('actions__inner')\">\n            <el-icon @click=\"handleActions('zoomOut')\">\n              <ZoomOut />\n            </el-icon>\n            <el-icon @click=\"handleActions('zoomIn')\">\n              <ZoomIn />\n            </el-icon>\n            <i :class=\"ns.e('actions__divider')\" />\n            <el-icon @click=\"toggleMode\">\n              <component :is=\"mode.icon\" />\n            </el-icon>\n            <i :class=\"ns.e('actions__divider')\" />\n            <el-icon @click=\"handleActions('anticlockwise')\">\n              <RefreshLeft />\n            </el-icon>\n            <el-icon @click=\"handleActions('clockwise')\">\n              <RefreshRight />\n            </el-icon>\n          </div>\n        </div>\n        <!-- CANVAS -->\n        <div :class=\"ns.e('canvas')\">\n          <img\n            v-for=\"(url, i) in urlList\"\n            v-show=\"i === activeIndex\"\n            :ref=\"(el) => (imgRefs[i] = el as HTMLImageElement)\"\n            :key=\"url\"\n            :src=\"url\"\n            :style=\"imgStyle\"\n            :class=\"ns.e('img')\"\n            @load=\"handleImgLoad\"\n            @error=\"handleImgError\"\n            @mousedown=\"handleMouseDown\"\n          />\n        </div>\n        <slot />\n      </div>\n    </transition>\n  </teleport>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  effectScope,\n  markRaw,\n  nextTick,\n  onMounted,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { isNumber, useEventListener } from '@vueuse/core'\nimport { throttle } from 'lodash-unified'\nimport { useLocale, useNamespace, useZIndex } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { isFirefox, keysOf } from '@element-plus/utils'\nimport ElIcon from '@element-plus/components/icon'\nimport {\n  ArrowLeft,\n  ArrowRight,\n  Close,\n  FullScreen,\n  RefreshLeft,\n  RefreshRight,\n  ScaleToOriginal,\n  ZoomIn,\n  ZoomOut,\n} from '@element-plus/icons-vue'\nimport { imageViewerEmits, imageViewerProps } from './image-viewer'\n\nimport type { CSSProperties } from 'vue'\nimport type { ImageViewerAction, ImageViewerMode } from './image-viewer'\n\nconst modes: Record<'CONTAIN' | 'ORIGINAL', ImageViewerMode> = {\n  CONTAIN: {\n    name: 'contain',\n    icon: markRaw(FullScreen),\n  },\n  ORIGINAL: {\n    name: 'original',\n    icon: markRaw(ScaleToOriginal),\n  },\n}\n\nconst mousewheelEventName = isFirefox() ? 'DOMMouseScroll' : 'mousewheel'\n\ndefineOptions({\n  name: 'ElImageViewer',\n})\n\nconst props = defineProps(imageViewerProps)\nconst emit = defineEmits(imageViewerEmits)\n\nconst { t } = useLocale()\nconst ns = useNamespace('image-viewer')\nconst { nextZIndex } = useZIndex()\nconst wrapper = ref<HTMLDivElement>()\nconst imgRefs = ref<HTMLImageElement[]>([])\n\nconst scopeEventListener = effectScope()\n\nconst loading = ref(true)\nconst activeIndex = ref(props.initialIndex)\nconst mode = shallowRef<ImageViewerMode>(modes.CONTAIN)\nconst transform = ref({\n  scale: 1,\n  deg: 0,\n  offsetX: 0,\n  offsetY: 0,\n  enableTransition: false,\n})\n\nconst isSingle = computed(() => {\n  const { urlList } = props\n  return urlList.length <= 1\n})\n\nconst isFirst = computed(() => {\n  return activeIndex.value === 0\n})\n\nconst isLast = computed(() => {\n  return activeIndex.value === props.urlList.length - 1\n})\n\nconst currentImg = computed(() => {\n  return props.urlList[activeIndex.value]\n})\n\nconst imgStyle = computed(() => {\n  const { scale, deg, offsetX, offsetY, enableTransition } = transform.value\n  let translateX = offsetX / scale\n  let translateY = offsetY / scale\n\n  switch (deg % 360) {\n    case 90:\n    case -270:\n      ;[translateX, translateY] = [translateY, -translateX]\n      break\n    case 180:\n    case -180:\n      ;[translateX, translateY] = [-translateX, -translateY]\n      break\n    case 270:\n    case -90:\n      ;[translateX, translateY] = [-translateY, translateX]\n      break\n  }\n\n  const style: CSSProperties = {\n    transform: `scale(${scale}) rotate(${deg}deg) translate(${translateX}px, ${translateY}px)`,\n    transition: enableTransition ? 'transform .3s' : '',\n  }\n  if (mode.value.name === modes.CONTAIN.name) {\n    style.maxWidth = style.maxHeight = '100%'\n  }\n  return style\n})\n\nconst computedZIndex = computed(() => {\n  return isNumber(props.zIndex) ? props.zIndex : nextZIndex()\n})\n\nfunction hide() {\n  unregisterEventListener()\n  emit('close')\n}\n\nfunction registerEventListener() {\n  const keydownHandler = throttle((e: KeyboardEvent) => {\n    switch (e.code) {\n      // ESC\n      case EVENT_CODE.esc:\n        props.closeOnPressEscape && hide()\n        break\n      // SPACE\n      case EVENT_CODE.space:\n        toggleMode()\n        break\n      // LEFT_ARROW\n      case EVENT_CODE.left:\n        prev()\n        break\n      // UP_ARROW\n      case EVENT_CODE.up:\n        handleActions('zoomIn')\n        break\n      // RIGHT_ARROW\n      case EVENT_CODE.right:\n        next()\n        break\n      // DOWN_ARROW\n      case EVENT_CODE.down:\n        handleActions('zoomOut')\n        break\n    }\n  })\n  const mousewheelHandler = throttle(\n    (e: WheelEvent | any /* TODO: wheelDelta is deprecated */) => {\n      const delta = e.wheelDelta ? e.wheelDelta : -e.detail\n      if (delta > 0) {\n        handleActions('zoomIn', {\n          zoomRate: 1.2,\n          enableTransition: false,\n        })\n      } else {\n        handleActions('zoomOut', {\n          zoomRate: 1.2,\n          enableTransition: false,\n        })\n      }\n    }\n  )\n\n  scopeEventListener.run(() => {\n    useEventListener(document, 'keydown', keydownHandler)\n    useEventListener(document, mousewheelEventName, mousewheelHandler)\n  })\n}\n\nfunction unregisterEventListener() {\n  scopeEventListener.stop()\n}\n\nfunction handleImgLoad() {\n  loading.value = false\n}\n\nfunction handleImgError(e: Event) {\n  loading.value = false\n  ;(e.target as HTMLImageElement).alt = t('el.image.error')\n}\n\nfunction handleMouseDown(e: MouseEvent) {\n  if (loading.value || e.button !== 0 || !wrapper.value) return\n  transform.value.enableTransition = false\n\n  const { offsetX, offsetY } = transform.value\n  const startX = e.pageX\n  const startY = e.pageY\n\n  const dragHandler = throttle((ev: MouseEvent) => {\n    transform.value = {\n      ...transform.value,\n      offsetX: offsetX + ev.pageX - startX,\n      offsetY: offsetY + ev.pageY - startY,\n    }\n  })\n  const removeMousemove = useEventListener(document, 'mousemove', dragHandler)\n  useEventListener(document, 'mouseup', () => {\n    removeMousemove()\n  })\n\n  e.preventDefault()\n}\n\nfunction reset() {\n  transform.value = {\n    scale: 1,\n    deg: 0,\n    offsetX: 0,\n    offsetY: 0,\n    enableTransition: false,\n  }\n}\n\nfunction toggleMode() {\n  if (loading.value) return\n\n  const modeNames = keysOf(modes)\n  const modeValues = Object.values(modes)\n  const currentMode = mode.value.name\n  const index = modeValues.findIndex((i) => i.name === currentMode)\n  const nextIndex = (index + 1) % modeNames.length\n  mode.value = modes[modeNames[nextIndex]]\n  reset()\n}\n\nfunction setActiveItem(index: number) {\n  const len = props.urlList.length\n  activeIndex.value = (index + len) % len\n}\n\nfunction prev() {\n  if (isFirst.value && !props.infinite) return\n  setActiveItem(activeIndex.value - 1)\n}\n\nfunction next() {\n  if (isLast.value && !props.infinite) return\n  setActiveItem(activeIndex.value + 1)\n}\n\nfunction handleActions(action: ImageViewerAction, options = {}) {\n  if (loading.value) return\n  const { zoomRate, rotateDeg, enableTransition } = {\n    zoomRate: 1.4,\n    rotateDeg: 90,\n    enableTransition: true,\n    ...options,\n  }\n  switch (action) {\n    case 'zoomOut':\n      if (transform.value.scale > 0.2) {\n        transform.value.scale = Number.parseFloat(\n          (transform.value.scale / zoomRate).toFixed(3)\n        )\n      }\n      break\n    case 'zoomIn':\n      if (transform.value.scale < 7) {\n        transform.value.scale = Number.parseFloat(\n          (transform.value.scale * zoomRate).toFixed(3)\n        )\n      }\n      break\n    case 'clockwise':\n      transform.value.deg += rotateDeg\n      break\n    case 'anticlockwise':\n      transform.value.deg -= rotateDeg\n      break\n  }\n  transform.value.enableTransition = enableTransition\n}\n\nwatch(currentImg, () => {\n  nextTick(() => {\n    const $img = imgRefs.value[0]\n    if (!$img?.complete) {\n      loading.value = true\n    }\n  })\n})\n\nwatch(activeIndex, (val) => {\n  reset()\n  emit('switch', val)\n})\n\nonMounted(() => {\n  registerEventListener()\n  // add tabindex then wrapper can be focusable via Javascript\n  // focus wrapper so arrow key can't cause inner scroll behavior underneath\n  wrapper.value?.focus?.()\n})\n\ndefineExpose({\n  /** @description manually switch image */\n  setActiveItem,\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}