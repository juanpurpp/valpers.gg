{"ast":null,"code":"import '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../popper/index.mjs';\nimport { useTooltipContentProps } from './content.mjs';\nimport { useTooltipTriggerProps } from './trigger.mjs';\nimport { createModelToggleComposable } from '../../../hooks/use-model-toggle/index.mjs';\nimport { buildProps } from '../../../utils/vue/props/runtime.mjs';\nimport { popperProps } from '../../popper/src/popper.mjs';\nimport { popperArrowProps } from '../../popper/src/arrow.mjs';\nconst {\n  useModelToggleProps: useTooltipModelToggleProps,\n  useModelToggleEmits: useTooltipModelToggleEmits,\n  useModelToggle: useTooltipModelToggle\n} = createModelToggleComposable(\"visible\");\nconst useTooltipProps = buildProps({ ...popperProps,\n  ...useTooltipModelToggleProps,\n  ...useTooltipContentProps,\n  ...useTooltipTriggerProps,\n  ...popperArrowProps,\n  openDelay: {\n    type: Number\n  },\n  visibleArrow: {\n    type: Boolean,\n    default: void 0\n  },\n  showArrow: {\n    type: Boolean,\n    default: true\n  }\n});\nconst tooltipEmits = [...useTooltipModelToggleEmits, \"before-show\", \"before-hide\", \"show\", \"hide\", \"open\", \"close\"];\nexport { tooltipEmits, useTooltipModelToggle, useTooltipModelToggleEmits, useTooltipModelToggleProps, useTooltipProps };","map":{"version":3,"mappings":";;;;;;;;;AAKY,MAAC;EACXA,mBAAmB,EAAEC,0BADV;EAEXC,mBAAmB,EAAEC,0BAFV;EAGXC,cAAc,EAAEC;AAHL,IAITC,2BAA2B,CAAC,SAAD,CAJnB;AAKA,MAACC,eAAe,GAAGC,UAAU,CAAC,EACxC,GAAGC,WADqC;EAExC,GAAGR,0BAFqC;EAGxC,GAAGS,sBAHqC;EAIxC,GAAGC,sBAJqC;EAKxC,GAAGC,gBALqC;EAMxCC,SAAS,EAAE;IACTC,IAAI,EAAEC;EADG,CAN6B;EASxCC,YAAY,EAAE;IACZF,IAAI,EAAEG,OADM;IAEZC,OAAO,EAAE,KAAK;EAFF,CAT0B;EAaxCC,SAAS,EAAE;IACTL,IAAI,EAAEG,OADG;IAETC,OAAO,EAAE;EAFA;AAb6B,CAAD,CAA7B;AAkBA,MAACE,YAAY,GAAG,CAC1B,GAAGjB,0BADuB,EAE1B,aAF0B,EAG1B,aAH0B,EAI1B,MAJ0B,EAK1B,MAL0B,EAM1B,MAN0B,EAO1B,OAP0B,CAAhB","names":["useModelToggleProps","useTooltipModelToggleProps","useModelToggleEmits","useTooltipModelToggleEmits","useModelToggle","useTooltipModelToggle","createModelToggleComposable","useTooltipProps","buildProps","popperProps","useTooltipContentProps","useTooltipTriggerProps","popperArrowProps","openDelay","type","Number","visibleArrow","Boolean","default","showArrow","tooltipEmits"],"sources":["../../../../../../packages/components/tooltip/src/tooltip.ts"],"sourcesContent":["import { buildProps } from '@element-plus/utils'\nimport { createModelToggleComposable } from '@element-plus/hooks'\nimport { popperArrowProps, popperProps } from '@element-plus/components/popper'\nimport { useTooltipContentProps } from './content'\nimport { useTooltipTriggerProps } from './trigger'\nimport type Tooltip from './tooltip.vue'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const {\n  useModelToggleProps: useTooltipModelToggleProps,\n  useModelToggleEmits: useTooltipModelToggleEmits,\n  useModelToggle: useTooltipModelToggle,\n} = createModelToggleComposable('visible' as const)\n\nexport const useTooltipProps = buildProps({\n  ...popperProps,\n  ...useTooltipModelToggleProps,\n  ...useTooltipContentProps,\n  ...useTooltipTriggerProps,\n  ...popperArrowProps,\n  openDelay: {\n    type: Number,\n  },\n  visibleArrow: {\n    type: Boolean,\n    default: undefined,\n  },\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n})\n\nexport const tooltipEmits = [\n  ...useTooltipModelToggleEmits,\n  'before-show',\n  'before-hide',\n  'show',\n  'hide',\n  'open',\n  'close',\n]\n\nexport type ElTooltipProps = ExtractPropTypes<typeof useTooltipProps>\n\nexport type TooltipInstance = InstanceType<typeof Tooltip>\n"]},"metadata":{},"sourceType":"module"}