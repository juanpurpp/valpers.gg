{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, getCurrentInstance, ref, computed, unref, watch, shallowRef, onMounted, onBeforeUnmount, provide, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, normalizeStyle, createBlock, Transition, withCtx, withDirectives, createVNode, vShow, createCommentVNode, renderSlot, Fragment, renderList, toDisplayString } from 'vue';\nimport { throttle } from 'lodash-unified';\nimport { useResizeObserver } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { ArrowLeft, ArrowRight } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport '../../../tokens/index.mjs';\nimport { carouselProps, carouselEmits } from './carousel.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useOrderedChildren } from '../../../hooks/use-ordered-children/index.mjs';\nimport { isString } from '@vue/shared';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { carouselContextKey } from '../../../tokens/carousel.mjs';\nconst _hoisted_1 = [\"onMouseenter\", \"onMouseleave\"];\nconst _hoisted_2 = [\"onMouseenter\", \"onClick\"];\nconst _hoisted_3 = {\n  key: 0\n};\nconst COMPONENT_NAME = \"ElCarousel\";\nconst THROTTLE_TIME = 300;\n\nconst __default__ = defineComponent({\n  name: \"ElCarousel\"\n});\n\nconst _sfc_main = /* @__PURE__ */defineComponent({ ...__default__,\n  props: carouselProps,\n  emits: carouselEmits,\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const ns = useNamespace(\"carousel\");\n    const {\n      children: items,\n      addChild: addItem,\n      removeChild: removeItem\n    } = useOrderedChildren(getCurrentInstance(), \"ElCarouselItem\");\n    const activeIndex = ref(-1);\n    const timer = ref(null);\n    const hover = ref(false);\n    const root = ref();\n    const arrowDisplay = computed(() => props.arrow !== \"never\" && !unref(isVertical));\n    const hasLabel = computed(() => {\n      return items.value.some(item => item.props.label.toString().length > 0);\n    });\n    const carouselClasses = computed(() => {\n      const classes = [ns.b(), ns.m(props.direction)];\n\n      if (unref(isCardType)) {\n        classes.push(ns.m(\"card\"));\n      }\n\n      return classes;\n    });\n    const indicatorsClasses = computed(() => {\n      const classes = [ns.e(\"indicators\"), ns.em(\"indicators\", props.direction)];\n\n      if (hasLabel.value) {\n        classes.push(ns.em(\"indicators\", \"labels\"));\n      }\n\n      if (props.indicatorPosition === \"outside\" || unref(isCardType)) {\n        classes.push(ns.em(\"indicators\", \"outside\"));\n      }\n\n      return classes;\n    });\n    const isCardType = computed(() => props.type === \"card\");\n    const isVertical = computed(() => props.direction === \"vertical\");\n    const throttledArrowClick = throttle(index => {\n      setActiveItem(index);\n    }, THROTTLE_TIME, {\n      trailing: true\n    });\n    const throttledIndicatorHover = throttle(index => {\n      handleIndicatorHover(index);\n    }, THROTTLE_TIME);\n\n    function pauseTimer() {\n      if (timer.value) {\n        clearInterval(timer.value);\n        timer.value = null;\n      }\n    }\n\n    function startTimer() {\n      if (props.interval <= 0 || !props.autoplay || timer.value) return;\n      timer.value = setInterval(() => playSlides(), props.interval);\n    }\n\n    const playSlides = () => {\n      if (activeIndex.value < items.value.length - 1) {\n        activeIndex.value = activeIndex.value + 1;\n      } else if (props.loop) {\n        activeIndex.value = 0;\n      }\n    };\n\n    function setActiveItem(index) {\n      if (isString(index)) {\n        const filteredItems = items.value.filter(item => item.props.name === index);\n\n        if (filteredItems.length > 0) {\n          index = items.value.indexOf(filteredItems[0]);\n        }\n      }\n\n      index = Number(index);\n\n      if (Number.isNaN(index) || index !== Math.floor(index)) {\n        debugWarn(COMPONENT_NAME, \"index must be integer.\");\n        return;\n      }\n\n      const itemCount = items.value.length;\n      const oldIndex = activeIndex.value;\n\n      if (index < 0) {\n        activeIndex.value = props.loop ? itemCount - 1 : 0;\n      } else if (index >= itemCount) {\n        activeIndex.value = props.loop ? 0 : itemCount - 1;\n      } else {\n        activeIndex.value = index;\n      }\n\n      if (oldIndex === activeIndex.value) {\n        resetItemPosition(oldIndex);\n      }\n\n      resetTimer();\n    }\n\n    function resetItemPosition(oldIndex) {\n      items.value.forEach((item, index) => {\n        item.translateItem(index, activeIndex.value, oldIndex);\n      });\n    }\n\n    function itemInStage(item, index) {\n      var _a, _b, _c, _d;\n\n      const _items = unref(items);\n\n      const itemCount = _items.length;\n      if (itemCount === 0 || !item.states.inStage) return false;\n      const nextItemIndex = index + 1;\n      const prevItemIndex = index - 1;\n      const lastItemIndex = itemCount - 1;\n      const isLastItemActive = _items[lastItemIndex].states.active;\n      const isFirstItemActive = _items[0].states.active;\n      const isNextItemActive = (_b = (_a = _items[nextItemIndex]) == null ? void 0 : _a.states) == null ? void 0 : _b.active;\n      const isPrevItemActive = (_d = (_c = _items[prevItemIndex]) == null ? void 0 : _c.states) == null ? void 0 : _d.active;\n\n      if (index === lastItemIndex && isFirstItemActive || isNextItemActive) {\n        return \"left\";\n      } else if (index === 0 && isLastItemActive || isPrevItemActive) {\n        return \"right\";\n      }\n\n      return false;\n    }\n\n    function handleMouseEnter() {\n      hover.value = true;\n\n      if (props.pauseOnHover) {\n        pauseTimer();\n      }\n    }\n\n    function handleMouseLeave() {\n      hover.value = false;\n      startTimer();\n    }\n\n    function handleButtonEnter(arrow) {\n      if (unref(isVertical)) return;\n      items.value.forEach((item, index) => {\n        if (arrow === itemInStage(item, index)) {\n          item.states.hover = true;\n        }\n      });\n    }\n\n    function handleButtonLeave() {\n      if (unref(isVertical)) return;\n      items.value.forEach(item => {\n        item.states.hover = false;\n      });\n    }\n\n    function handleIndicatorClick(index) {\n      activeIndex.value = index;\n    }\n\n    function handleIndicatorHover(index) {\n      if (props.trigger === \"hover\" && index !== activeIndex.value) {\n        activeIndex.value = index;\n      }\n    }\n\n    function prev() {\n      setActiveItem(activeIndex.value - 1);\n    }\n\n    function next() {\n      setActiveItem(activeIndex.value + 1);\n    }\n\n    function resetTimer() {\n      pauseTimer();\n      startTimer();\n    }\n\n    watch(() => activeIndex.value, (current, prev2) => {\n      resetItemPosition(prev2);\n\n      if (prev2 > -1) {\n        emit(\"change\", current, prev2);\n      }\n    });\n    watch(() => props.autoplay, autoplay => {\n      autoplay ? startTimer() : pauseTimer();\n    });\n    watch(() => props.loop, () => {\n      setActiveItem(activeIndex.value);\n    });\n    watch(() => props.interval, () => {\n      resetTimer();\n    });\n    watch(() => items.value, () => {\n      if (items.value.length > 0) setActiveItem(props.initialIndex);\n    });\n    const resizeObserver = shallowRef();\n    onMounted(() => {\n      resizeObserver.value = useResizeObserver(root.value, () => {\n        resetItemPosition();\n      });\n      startTimer();\n    });\n    onBeforeUnmount(() => {\n      pauseTimer();\n      if (root.value && resizeObserver.value) resizeObserver.value.stop();\n    });\n    provide(carouselContextKey, {\n      root,\n      isCardType,\n      isVertical,\n      items,\n      loop: props.loop,\n      addItem,\n      removeItem,\n      setActiveItem\n    });\n    expose({\n      setActiveItem,\n      prev,\n      next\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"root\",\n        ref: root,\n        class: normalizeClass(unref(carouselClasses)),\n        onMouseenter: withModifiers(handleMouseEnter, [\"stop\"]),\n        onMouseleave: withModifiers(handleMouseLeave, [\"stop\"])\n      }, [createElementVNode(\"div\", {\n        class: normalizeClass(unref(ns).e(\"container\")),\n        style: normalizeStyle({\n          height: _ctx.height\n        })\n      }, [unref(arrowDisplay) ? (openBlock(), createBlock(Transition, {\n        key: 0,\n        name: \"carousel-arrow-left\",\n        persisted: \"\"\n      }, {\n        default: withCtx(() => [withDirectives(createElementVNode(\"button\", {\n          type: \"button\",\n          class: normalizeClass([unref(ns).e(\"arrow\"), unref(ns).em(\"arrow\", \"left\")]),\n          onMouseenter: _cache[0] || (_cache[0] = $event => handleButtonEnter(\"left\")),\n          onMouseleave: handleButtonLeave,\n          onClick: _cache[1] || (_cache[1] = withModifiers($event => unref(throttledArrowClick)(activeIndex.value - 1), [\"stop\"]))\n        }, [createVNode(unref(ElIcon), null, {\n          default: withCtx(() => [createVNode(unref(ArrowLeft))]),\n          _: 1\n        })], 34), [[vShow, (_ctx.arrow === \"always\" || hover.value) && (props.loop || activeIndex.value > 0)]])]),\n        _: 1\n      })) : createCommentVNode(\"v-if\", true), unref(arrowDisplay) ? (openBlock(), createBlock(Transition, {\n        key: 1,\n        name: \"carousel-arrow-right\",\n        persisted: \"\"\n      }, {\n        default: withCtx(() => [withDirectives(createElementVNode(\"button\", {\n          type: \"button\",\n          class: normalizeClass([unref(ns).e(\"arrow\"), unref(ns).em(\"arrow\", \"right\")]),\n          onMouseenter: _cache[2] || (_cache[2] = $event => handleButtonEnter(\"right\")),\n          onMouseleave: handleButtonLeave,\n          onClick: _cache[3] || (_cache[3] = withModifiers($event => unref(throttledArrowClick)(activeIndex.value + 1), [\"stop\"]))\n        }, [createVNode(unref(ElIcon), null, {\n          default: withCtx(() => [createVNode(unref(ArrowRight))]),\n          _: 1\n        })], 34), [[vShow, (_ctx.arrow === \"always\" || hover.value) && (props.loop || activeIndex.value < unref(items).length - 1)]])]),\n        _: 1\n      })) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\")], 6), _ctx.indicatorPosition !== \"none\" ? (openBlock(), createElementBlock(\"ul\", {\n        key: 0,\n        class: normalizeClass(unref(indicatorsClasses))\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(unref(items), (item, index) => {\n        return openBlock(), createElementBlock(\"li\", {\n          key: index,\n          class: normalizeClass([unref(ns).e(\"indicator\"), unref(ns).em(\"indicator\", _ctx.direction), unref(ns).is(\"active\", index === activeIndex.value)]),\n          onMouseenter: $event => unref(throttledIndicatorHover)(index),\n          onClick: withModifiers($event => handleIndicatorClick(index), [\"stop\"])\n        }, [createElementVNode(\"button\", {\n          class: normalizeClass(unref(ns).e(\"button\"))\n        }, [unref(hasLabel) ? (openBlock(), createElementBlock(\"span\", _hoisted_3, toDisplayString(item.props.label), 1)) : createCommentVNode(\"v-if\", true)], 2)], 42, _hoisted_2);\n      }), 128))], 2)) : createCommentVNode(\"v-if\", true)], 42, _hoisted_1);\n    };\n  }\n\n});\n\nvar Carousel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/carousel/src/carousel.vue\"]]);\n\nexport { Carousel as default };","map":{"version":3,"mappings":"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","names":["name","useNamespace","children","addChild","removeChild","useOrderedChildren","getCurrentInstance","ref","root","computed","props","arrow","unref","value","some","item","label","toString","length","ns","isCardType","classes","push","m","e","em","hasLabel","type","isVertical","direction","throttle","index","setActiveItem","THROTTLE_TIME","trailing","handleIndicatorHover","timer","clearInterval","interval","autoplay","setInterval","playSlides","activeIndex","items","loop","filter","indexOf","filteredItems","Number","isNaN","Math","debugWarn","COMPONENT_NAME","oldIndex","itemCount","resetItemPosition","resetTimer","forEach","translateItem","_items","nextItemIndex","prevItemIndex","states","active","_b","_a","_c","_d","handleMouseEnter","hover","pauseTimer","handleMouseLeave","startTimer","itemInStage","watch","emit","onMounted","resizeObserver","onBeforeUnmount","provide","addItem","removeItem","expose","prev","next"],"sources":["../../../../../../packages/components/carousel/src/carousel.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"root\"\n    :class=\"carouselClasses\"\n    @mouseenter.stop=\"handleMouseEnter\"\n    @mouseleave.stop=\"handleMouseLeave\"\n  >\n    <div :class=\"ns.e('container')\" :style=\"{ height: height }\">\n      <transition v-if=\"arrowDisplay\" name=\"carousel-arrow-left\">\n        <button\n          v-show=\"\n            (arrow === 'always' || hover) && (props.loop || activeIndex > 0)\n          \"\n          type=\"button\"\n          :class=\"[ns.e('arrow'), ns.em('arrow', 'left')]\"\n          @mouseenter=\"handleButtonEnter('left')\"\n          @mouseleave=\"handleButtonLeave\"\n          @click.stop=\"throttledArrowClick(activeIndex - 1)\"\n        >\n          <ElIcon>\n            <ArrowLeft />\n          </ElIcon>\n        </button>\n      </transition>\n      <transition v-if=\"arrowDisplay\" name=\"carousel-arrow-right\">\n        <button\n          v-show=\"\n            (arrow === 'always' || hover) &&\n            (props.loop || activeIndex < items.length - 1)\n          \"\n          type=\"button\"\n          :class=\"[ns.e('arrow'), ns.em('arrow', 'right')]\"\n          @mouseenter=\"handleButtonEnter('right')\"\n          @mouseleave=\"handleButtonLeave\"\n          @click.stop=\"throttledArrowClick(activeIndex + 1)\"\n        >\n          <ElIcon>\n            <ArrowRight />\n          </ElIcon>\n        </button>\n      </transition>\n      <slot />\n    </div>\n    <ul v-if=\"indicatorPosition !== 'none'\" :class=\"indicatorsClasses\">\n      <li\n        v-for=\"(item, index) in items\"\n        :key=\"index\"\n        :class=\"[\n          ns.e('indicator'),\n          ns.em('indicator', direction),\n          ns.is('active', index === activeIndex),\n        ]\"\n        @mouseenter=\"throttledIndicatorHover(index)\"\n        @click.stop=\"handleIndicatorClick(index)\"\n      >\n        <button :class=\"ns.e('button')\">\n          <span v-if=\"hasLabel\">{{ item.props.label }}</span>\n        </button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  getCurrentInstance,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  ref,\n  shallowRef,\n  unref,\n  watch,\n} from 'vue'\nimport { throttle } from 'lodash-unified'\nimport { useResizeObserver } from '@vueuse/core'\nimport { debugWarn, isString } from '@element-plus/utils'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowLeft, ArrowRight } from '@element-plus/icons-vue'\nimport { useNamespace, useOrderedChildren } from '@element-plus/hooks'\nimport { carouselContextKey } from '@element-plus/tokens'\nimport { carouselEmits, carouselProps } from './carousel'\nimport type { CarouselItemContext } from '@element-plus/tokens'\n\ndefineOptions({\n  name: 'ElCarousel',\n})\n\nconst props = defineProps(carouselProps)\nconst emit = defineEmits(carouselEmits)\nconst ns = useNamespace('carousel')\nconst COMPONENT_NAME = 'ElCarousel'\nconst THROTTLE_TIME = 300\n\nconst {\n  children: items,\n  addChild: addItem,\n  removeChild: removeItem,\n} = useOrderedChildren<CarouselItemContext>(\n  getCurrentInstance()!,\n  'ElCarouselItem'\n)\n\n// refs\nconst activeIndex = ref(-1)\nconst timer = ref<ReturnType<typeof setInterval> | null>(null)\nconst hover = ref(false)\nconst root = ref<HTMLDivElement>()\n\n// computed\nconst arrowDisplay = computed(\n  () => props.arrow !== 'never' && !unref(isVertical)\n)\n\nconst hasLabel = computed(() => {\n  return items.value.some((item) => item.props.label.toString().length > 0)\n})\n\nconst carouselClasses = computed(() => {\n  const classes = [ns.b(), ns.m(props.direction)]\n  if (unref(isCardType)) {\n    classes.push(ns.m('card'))\n  }\n  return classes\n})\n\nconst indicatorsClasses = computed(() => {\n  const classes = [ns.e('indicators'), ns.em('indicators', props.direction)]\n  if (hasLabel.value) {\n    classes.push(ns.em('indicators', 'labels'))\n  }\n  if (props.indicatorPosition === 'outside' || unref(isCardType)) {\n    classes.push(ns.em('indicators', 'outside'))\n  }\n  return classes\n})\n\nconst isCardType = computed(() => props.type === 'card')\nconst isVertical = computed(() => props.direction === 'vertical')\n\n// methods\nconst throttledArrowClick = throttle(\n  (index: number) => {\n    setActiveItem(index)\n  },\n  THROTTLE_TIME,\n  { trailing: true }\n)\n\nconst throttledIndicatorHover = throttle((index: number) => {\n  handleIndicatorHover(index)\n}, THROTTLE_TIME)\n\nfunction pauseTimer() {\n  if (timer.value) {\n    clearInterval(timer.value)\n    timer.value = null\n  }\n}\n\nfunction startTimer() {\n  if (props.interval <= 0 || !props.autoplay || timer.value) return\n  timer.value = setInterval(() => playSlides(), props.interval)\n}\n\nconst playSlides = () => {\n  if (activeIndex.value < items.value.length - 1) {\n    activeIndex.value = activeIndex.value + 1\n  } else if (props.loop) {\n    activeIndex.value = 0\n  }\n}\n\nfunction setActiveItem(index: number | string) {\n  if (isString(index)) {\n    const filteredItems = items.value.filter(\n      (item) => item.props.name === index\n    )\n    if (filteredItems.length > 0) {\n      index = items.value.indexOf(filteredItems[0])\n    }\n  }\n  index = Number(index)\n  if (Number.isNaN(index) || index !== Math.floor(index)) {\n    debugWarn(COMPONENT_NAME, 'index must be integer.')\n    return\n  }\n  const itemCount = items.value.length\n  const oldIndex = activeIndex.value\n  if (index < 0) {\n    activeIndex.value = props.loop ? itemCount - 1 : 0\n  } else if (index >= itemCount) {\n    activeIndex.value = props.loop ? 0 : itemCount - 1\n  } else {\n    activeIndex.value = index\n  }\n  if (oldIndex === activeIndex.value) {\n    resetItemPosition(oldIndex)\n  }\n  resetTimer()\n}\n\nfunction resetItemPosition(oldIndex?: number) {\n  items.value.forEach((item, index) => {\n    item.translateItem(index, activeIndex.value, oldIndex)\n  })\n}\n\nfunction itemInStage(item: CarouselItemContext, index: number) {\n  const _items = unref(items)\n  const itemCount = _items.length\n  if (itemCount === 0 || !item.states.inStage) return false\n  const nextItemIndex = index + 1\n  const prevItemIndex = index - 1\n  const lastItemIndex = itemCount - 1\n  const isLastItemActive = _items[lastItemIndex].states.active\n  const isFirstItemActive = _items[0].states.active\n  const isNextItemActive = _items[nextItemIndex]?.states?.active\n  const isPrevItemActive = _items[prevItemIndex]?.states?.active\n\n  if ((index === lastItemIndex && isFirstItemActive) || isNextItemActive) {\n    return 'left'\n  } else if ((index === 0 && isLastItemActive) || isPrevItemActive) {\n    return 'right'\n  }\n  return false\n}\n\nfunction handleMouseEnter() {\n  hover.value = true\n  if (props.pauseOnHover) {\n    pauseTimer()\n  }\n}\n\nfunction handleMouseLeave() {\n  hover.value = false\n  startTimer()\n}\n\nfunction handleButtonEnter(arrow: 'left' | 'right') {\n  if (unref(isVertical)) return\n  items.value.forEach((item, index) => {\n    if (arrow === itemInStage(item, index)) {\n      item.states.hover = true\n    }\n  })\n}\n\nfunction handleButtonLeave() {\n  if (unref(isVertical)) return\n  items.value.forEach((item) => {\n    item.states.hover = false\n  })\n}\n\nfunction handleIndicatorClick(index: number) {\n  activeIndex.value = index\n}\n\nfunction handleIndicatorHover(index: number) {\n  if (props.trigger === 'hover' && index !== activeIndex.value) {\n    activeIndex.value = index\n  }\n}\n\nfunction prev() {\n  setActiveItem(activeIndex.value - 1)\n}\n\nfunction next() {\n  setActiveItem(activeIndex.value + 1)\n}\n\nfunction resetTimer() {\n  pauseTimer()\n  startTimer()\n}\n\n// watch\nwatch(\n  () => activeIndex.value,\n  (current, prev) => {\n    resetItemPosition(prev)\n    if (prev > -1) {\n      emit('change', current, prev)\n    }\n  }\n)\nwatch(\n  () => props.autoplay,\n  (autoplay) => {\n    autoplay ? startTimer() : pauseTimer()\n  }\n)\nwatch(\n  () => props.loop,\n  () => {\n    setActiveItem(activeIndex.value)\n  }\n)\n\nwatch(\n  () => props.interval,\n  () => {\n    resetTimer()\n  }\n)\n\nwatch(\n  () => items.value,\n  () => {\n    if (items.value.length > 0) setActiveItem(props.initialIndex)\n  }\n)\n\nconst resizeObserver = shallowRef<ReturnType<typeof useResizeObserver>>()\n// lifecycle\nonMounted(() => {\n  resizeObserver.value = useResizeObserver(root.value, () => {\n    resetItemPosition()\n  })\n  startTimer()\n})\n\nonBeforeUnmount(() => {\n  pauseTimer()\n  if (root.value && resizeObserver.value) resizeObserver.value.stop()\n})\n\n// provide\nprovide(carouselContextKey, {\n  root,\n  isCardType,\n  isVertical,\n  items,\n  loop: props.loop,\n  addItem,\n  removeItem,\n  setActiveItem,\n})\n\ndefineExpose({\n  /** @description manually switch slide */\n  setActiveItem,\n  /** @description switch to the previous slide */\n  prev,\n  /** @description switch to the next slide */\n  next,\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}