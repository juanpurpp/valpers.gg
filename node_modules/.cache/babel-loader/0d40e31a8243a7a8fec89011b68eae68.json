{"ast":null,"code":"import '../../utils/index.mjs';\nimport { isFunction } from '@vue/shared';\nconst REPEAT_INTERVAL = 100;\nconst REPEAT_DELAY = 600;\nconst vRepeatClick = {\n  beforeMount(el, binding) {\n    const value = binding.value;\n    const {\n      interval = REPEAT_INTERVAL,\n      delay = REPEAT_DELAY\n    } = isFunction(value) ? {} : value;\n    let intervalId;\n    let delayId;\n\n    const handler = () => isFunction(value) ? value() : value.handler();\n\n    const clear = () => {\n      if (delayId) {\n        clearTimeout(delayId);\n        delayId = void 0;\n      }\n\n      if (intervalId) {\n        clearInterval(intervalId);\n        intervalId = void 0;\n      }\n    };\n\n    el.addEventListener(\"mousedown\", evt => {\n      if (evt.button !== 0) return;\n      clear();\n      handler();\n      document.addEventListener(\"mouseup\", () => clear(), {\n        once: true\n      });\n      delayId = setTimeout(() => {\n        intervalId = setInterval(() => {\n          handler();\n        }, interval);\n      }, delay);\n    });\n  }\n\n};\nexport { REPEAT_DELAY, REPEAT_INTERVAL, vRepeatClick };","map":{"version":3,"mappings":";;AACY,MAACA,eAAe,GAAG,GAAnB;AACA,MAACC,YAAY,GAAG,GAAhB;AACA,MAACC,YAAY,GAAG;EAC1BC,WAAW,CAACC,EAAD,EAAKC,OAAL,EAAc;IACvB,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAtB;IACA,MAAM;MAAEC,QAAQ,GAAGP,eAAb;MAA8BQ,KAAK,GAAGP;IAAtC,IAAuDQ,UAAU,CAACH,KAAD,CAAV,GAAoB,EAApB,GAAyBA,KAAtF;IACA,IAAII,UAAJ;IACA,IAAIC,OAAJ;;IACA,MAAMC,OAAO,GAAG,MAAMH,UAAU,CAACH,KAAD,CAAV,GAAoBA,KAAK,EAAzB,GAA8BA,KAAK,CAACM,OAAN,EAApD;;IACA,MAAMC,KAAK,GAAG,MAAM;MAClB,IAAIF,OAAJ,EAAa;QACXG,YAAY,CAACH,OAAD,CAAZ;QACAA,OAAO,GAAG,KAAK,CAAf;MACD;;MACD,IAAID,UAAJ,EAAgB;QACdK,aAAa,CAACL,UAAD,CAAb;QACAA,UAAU,GAAG,KAAK,CAAlB;MACD;IACF,CATD;;IAUAN,EAAE,CAACY,gBAAH,CAAoB,WAApB,EAAkCC,GAAD,IAAS;MACxC,IAAIA,GAAG,CAACC,MAAJ,KAAe,CAAnB,EACE;MACFL,KAAK;MACLD,OAAO;MACPO,QAAQ,CAACH,gBAAT,CAA0B,SAA1B,EAAqC,MAAMH,KAAK,EAAhD,EAAoD;QAClDO,IAAI,EAAE;MAD4C,CAApD;MAGAT,OAAO,GAAGU,UAAU,CAAC,MAAM;QACzBX,UAAU,GAAGY,WAAW,CAAC,MAAM;UAC7BV,OAAO;QACR,CAFuB,EAErBL,QAFqB,CAAxB;MAGD,CAJmB,EAIjBC,KAJiB,CAApB;IAKD,CAbD;EAcD;;AA/ByB,CAAhB","names":["REPEAT_INTERVAL","REPEAT_DELAY","vRepeatClick","beforeMount","el","binding","value","interval","delay","isFunction","intervalId","delayId","handler","clear","clearTimeout","clearInterval","addEventListener","evt","button","document","once","setTimeout","setInterval"],"sources":["../../../../../packages/directives/repeat-click/index.ts"],"sourcesContent":["import { isFunction } from '@element-plus/utils'\n\nimport type { ObjectDirective } from 'vue'\n\nexport const REPEAT_INTERVAL = 100\nexport const REPEAT_DELAY = 600\n\nexport interface RepeatClickOptions {\n  interval?: number\n  delay?: number\n  handler: (...args: unknown[]) => unknown\n}\n\nexport const vRepeatClick: ObjectDirective<\n  HTMLElement,\n  RepeatClickOptions | RepeatClickOptions['handler']\n> = {\n  beforeMount(el, binding) {\n    const value = binding.value\n    const { interval = REPEAT_INTERVAL, delay = REPEAT_DELAY } = isFunction(\n      value\n    )\n      ? {}\n      : value\n\n    let intervalId: ReturnType<typeof setInterval> | undefined\n    let delayId: ReturnType<typeof setTimeout> | undefined\n\n    const handler = () => (isFunction(value) ? value() : value.handler())\n\n    const clear = () => {\n      if (delayId) {\n        clearTimeout(delayId)\n        delayId = undefined\n      }\n      if (intervalId) {\n        clearInterval(intervalId)\n        intervalId = undefined\n      }\n    }\n\n    el.addEventListener('mousedown', (evt: MouseEvent) => {\n      if (evt.button !== 0) return\n      clear()\n      handler()\n\n      document.addEventListener('mouseup', () => clear(), {\n        once: true,\n      })\n\n      delayId = setTimeout(() => {\n        intervalId = setInterval(() => {\n          handler()\n        }, interval)\n      }, delay)\n    })\n  },\n}\n"]},"metadata":{},"sourceType":"module"}