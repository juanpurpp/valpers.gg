{"ast":null,"code":"import { defineComponent, getCurrentInstance, ref, shallowReactive, shallowRef, computed, watch, nextTick, provide, createVNode, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Plus } from '@element-plus/icons-vue';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport TabNav from './tab-nav.mjs';\nimport { getOrderedPanes } from './utils/pane.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { isString } from '@vue/shared';\nimport { isNumber } from '@vueuse/core';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isUndefined } from '../../../utils/types.mjs';\nimport { useDeprecated } from '../../../hooks/use-deprecated/index.mjs';\nimport { tabsRootContextKey } from '../../../tokens/tabs.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nconst tabsProps = buildProps({\n  type: {\n    type: String,\n    values: [\"card\", \"border-card\", \"\"],\n    default: \"\"\n  },\n  activeName: {\n    type: [String, Number]\n  },\n  closable: Boolean,\n  addable: Boolean,\n  modelValue: {\n    type: [String, Number]\n  },\n  editable: Boolean,\n  tabPosition: {\n    type: String,\n    values: [\"top\", \"right\", \"bottom\", \"left\"],\n    default: \"top\"\n  },\n  beforeLeave: {\n    type: definePropType(Function),\n    default: () => true\n  },\n  stretch: Boolean\n});\n\nconst isPaneName = value => isString(value) || isNumber(value);\n\nconst tabsEmits = {\n  [UPDATE_MODEL_EVENT]: name => isPaneName(name),\n  tabClick: (pane, ev) => ev instanceof Event,\n  tabChange: name => isPaneName(name),\n  edit: (paneName, action) => [\"remove\", \"add\"].includes(action),\n  tabRemove: name => isPaneName(name),\n  tabAdd: () => true\n};\nvar Tabs = defineComponent({\n  name: \"ElTabs\",\n  props: tabsProps,\n  emits: tabsEmits,\n\n  setup(props, {\n    emit,\n    slots,\n    expose\n  }) {\n    var _a, _b;\n\n    const vm = getCurrentInstance();\n    const ns = useNamespace(\"tabs\");\n    const nav$ = ref();\n    const panes = shallowReactive({});\n    const orderedPanes = shallowRef([]);\n    const currentName = ref((_b = (_a = props.modelValue) != null ? _a : props.activeName) != null ? _b : \"0\");\n\n    const changeCurrentName = value => {\n      currentName.value = value;\n      emit(UPDATE_MODEL_EVENT, value);\n      emit(\"tabChange\", value);\n    };\n\n    const setCurrentName = async value => {\n      var _a2, _b2, _c;\n\n      if (currentName.value === value || isUndefined(value)) return;\n\n      try {\n        const canLeave = await ((_a2 = props.beforeLeave) == null ? void 0 : _a2.call(props, value, currentName.value));\n\n        if (canLeave !== false) {\n          changeCurrentName(value);\n          (_c = (_b2 = nav$.value) == null ? void 0 : _b2.removeFocus) == null ? void 0 : _c.call(_b2);\n        }\n      } catch (e) {}\n    };\n\n    const handleTabClick = (tab, tabName, event) => {\n      if (tab.props.disabled) return;\n      setCurrentName(tabName);\n      emit(\"tabClick\", tab, event);\n    };\n\n    const handleTabRemove = (pane, ev) => {\n      if (pane.props.disabled || isUndefined(pane.props.name)) return;\n      ev.stopPropagation();\n      emit(\"edit\", pane.props.name, \"remove\");\n      emit(\"tabRemove\", pane.props.name);\n    };\n\n    const handleTabAdd = () => {\n      emit(\"edit\", void 0, \"add\");\n      emit(\"tabAdd\");\n    };\n\n    useDeprecated({\n      from: '\"activeName\"',\n      replacement: '\"model-value\" or \"v-model\"',\n      scope: \"ElTabs\",\n      version: \"2.3.0\",\n      ref: \"https://element-plus.org/en-US/component/tabs.html#attributes\",\n      type: \"Attribute\"\n    }, computed(() => !!props.activeName));\n    watch(() => props.activeName, modelValue => setCurrentName(modelValue));\n    watch(() => props.modelValue, modelValue => setCurrentName(modelValue));\n    watch(currentName, async () => {\n      var _a2;\n\n      await nextTick();\n      (_a2 = nav$.value) == null ? void 0 : _a2.scrollToActiveTab();\n    });\n    {\n      const registerPane = pane => {\n        panes[pane.uid] = pane;\n        orderedPanes.value = getOrderedPanes(vm, panes);\n      };\n\n      const unregisterPane = uid => {\n        delete panes[uid];\n        orderedPanes.value = getOrderedPanes(vm, panes);\n      };\n\n      provide(tabsRootContextKey, {\n        props,\n        currentName,\n        registerPane,\n        unregisterPane\n      });\n    }\n    expose({\n      currentName\n    });\n    return () => {\n      const newButton = props.editable || props.addable ? createVNode(\"span\", {\n        \"class\": ns.e(\"new-tab\"),\n        \"tabindex\": \"0\",\n        \"onClick\": handleTabAdd,\n        \"onKeydown\": ev => {\n          if (ev.code === EVENT_CODE.enter) handleTabAdd();\n        }\n      }, [createVNode(ElIcon, {\n        \"class\": ns.is(\"icon-plus\")\n      }, {\n        default: () => [createVNode(Plus, null, null)]\n      })]) : null;\n      const header = createVNode(\"div\", {\n        \"class\": [ns.e(\"header\"), ns.is(props.tabPosition)]\n      }, [newButton, createVNode(TabNav, {\n        \"ref\": nav$,\n        \"currentName\": currentName.value,\n        \"editable\": props.editable,\n        \"type\": props.type,\n        \"panes\": orderedPanes.value,\n        \"stretch\": props.stretch,\n        \"onTabClick\": handleTabClick,\n        \"onTabRemove\": handleTabRemove\n      }, null)]);\n      const panels = createVNode(\"div\", {\n        \"class\": ns.e(\"content\")\n      }, [renderSlot(slots, \"default\")]);\n      return createVNode(\"div\", {\n        \"class\": [ns.b(), ns.m(props.tabPosition), {\n          [ns.m(\"card\")]: props.type === \"card\",\n          [ns.m(\"border-card\")]: props.type === \"border-card\"\n        }]\n      }, [...(props.tabPosition !== \"bottom\" ? [header, panels] : [panels, header])]);\n    };\n  }\n\n});\nexport { Tabs as default, tabsEmits, tabsProps };","map":{"version":3,"mappings":"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","names":["tabsProps","buildProps","type","String","values","default","activeName","Number","closable","Boolean","addable","modelValue","editable","tabPosition","beforeLeave","definePropType","Function","stretch","tabClick","tabsEmits","ev","tabChange","name","includes","action","isPaneName","edit","tabAdd","defineComponent","props","emits","expose","slots","_a","_b","vm","getCurrentInstance","ns","useNamespace","shallowReactive","nav$","panes","orderedPanes","currentName","value","changeCurrentName","emit","setCurrentName","UPDATE_MODEL_EVENT","_a2","_b2","_c","handleTabRemove","handleTabClick","event","pane","replacement","handleTabAdd","computed","useDeprecated","from","scope","version","ref","registerPane","watch","getOrderedPanes","nextTick","newButton","unregisterPane","_createVNode","e","EVENT_CODE"],"sources":["../../../../../../packages/components/tabs/src/tabs.tsx"],"sourcesContent":["import {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  nextTick,\n  provide,\n  ref,\n  renderSlot,\n  shallowReactive,\n  shallowRef,\n  watch,\n} from 'vue'\nimport {\n  buildProps,\n  definePropType,\n  isNumber,\n  isString,\n  isUndefined,\n} from '@element-plus/utils'\nimport { EVENT_CODE, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport ElIcon from '@element-plus/components/icon'\nimport { Plus } from '@element-plus/icons-vue'\nimport { tabsRootContextKey } from '@element-plus/tokens'\nimport { useDeprecated, useNamespace } from '@element-plus/hooks'\nimport TabNav from './tab-nav'\nimport { getOrderedPanes } from './utils/pane'\n\nimport type { TabNavInstance } from './tab-nav'\nimport type { TabsPaneContext } from '@element-plus/tokens'\nimport type { ExtractPropTypes } from 'vue'\nimport type { Awaitable } from '@element-plus/utils'\n\nexport type TabPaneName = string | number\n\nexport const tabsProps = buildProps({\n  type: {\n    type: String,\n    values: ['card', 'border-card', ''],\n    default: '',\n  },\n  activeName: {\n    type: [String, Number],\n  },\n  closable: Boolean,\n  addable: Boolean,\n  modelValue: {\n    type: [String, Number],\n  },\n  editable: Boolean,\n  tabPosition: {\n    type: String,\n    values: ['top', 'right', 'bottom', 'left'],\n    default: 'top',\n  },\n  beforeLeave: {\n    type: definePropType<\n      (newName: TabPaneName, oldName: TabPaneName) => Awaitable<void | boolean>\n    >(Function),\n    default: () => true,\n  },\n  stretch: Boolean,\n} as const)\nexport type TabsProps = ExtractPropTypes<typeof tabsProps>\n\nconst isPaneName = (value: unknown): value is string | number =>\n  isString(value) || isNumber(value)\n\nexport const tabsEmits = {\n  [UPDATE_MODEL_EVENT]: (name: TabPaneName) => isPaneName(name),\n  tabClick: (pane: TabsPaneContext, ev: Event) => ev instanceof Event,\n  tabChange: (name: TabPaneName) => isPaneName(name),\n  edit: (paneName: TabPaneName | undefined, action: 'remove' | 'add') =>\n    ['remove', 'add'].includes(action),\n  tabRemove: (name: TabPaneName) => isPaneName(name),\n  tabAdd: () => true,\n}\nexport type TabsEmits = typeof tabsEmits\n\nexport type TabsPanes = Record<number, TabsPaneContext>\n\nexport default defineComponent({\n  name: 'ElTabs',\n\n  props: tabsProps,\n  emits: tabsEmits,\n\n  setup(props, { emit, slots, expose }) {\n    const vm = getCurrentInstance()!\n\n    const ns = useNamespace('tabs')\n\n    const nav$ = ref<TabNavInstance>()\n    const panes = shallowReactive<TabsPanes>({})\n    const orderedPanes = shallowRef<TabsPaneContext[]>([])\n    const currentName = ref<TabPaneName>(\n      props.modelValue ?? props.activeName ?? '0'\n    )\n\n    const changeCurrentName = (value: TabPaneName) => {\n      currentName.value = value\n      emit(UPDATE_MODEL_EVENT, value)\n      emit('tabChange', value)\n    }\n\n    const setCurrentName = async (value?: TabPaneName) => {\n      // should do nothing.\n      if (currentName.value === value || isUndefined(value)) return\n\n      try {\n        const canLeave = await props.beforeLeave?.(value, currentName.value)\n        if (canLeave !== false) {\n          changeCurrentName(value)\n\n          // call exposed function, Vue doesn't support expose in typescript yet.\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-expect-error\n          nav$.value?.removeFocus?.()\n        }\n      } catch {}\n    }\n\n    const handleTabClick = (\n      tab: TabsPaneContext,\n      tabName: TabPaneName,\n      event: Event\n    ) => {\n      if (tab.props.disabled) return\n      setCurrentName(tabName)\n      emit('tabClick', tab, event)\n    }\n\n    const handleTabRemove = (pane: TabsPaneContext, ev: Event) => {\n      if (pane.props.disabled || isUndefined(pane.props.name)) return\n      ev.stopPropagation()\n      emit('edit', pane.props.name, 'remove')\n      emit('tabRemove', pane.props.name)\n    }\n\n    const handleTabAdd = () => {\n      emit('edit', undefined, 'add')\n      emit('tabAdd')\n    }\n\n    useDeprecated(\n      {\n        from: '\"activeName\"',\n        replacement: '\"model-value\" or \"v-model\"',\n        scope: 'ElTabs',\n        version: '2.3.0',\n        ref: 'https://element-plus.org/en-US/component/tabs.html#attributes',\n        type: 'Attribute',\n      },\n      computed(() => !!props.activeName)\n    )\n\n    watch(\n      () => props.activeName,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(\n      () => props.modelValue,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(currentName, async () => {\n      await nextTick()\n      // call exposed function, Vue doesn't support expose in typescript yet.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      nav$.value?.scrollToActiveTab()\n    })\n\n    {\n      const registerPane = (pane: TabsPaneContext) => {\n        panes[pane.uid] = pane\n        orderedPanes.value = getOrderedPanes(vm, panes)\n      }\n\n      const unregisterPane = (uid: number) => {\n        delete panes[uid]\n        orderedPanes.value = getOrderedPanes(vm, panes)\n      }\n\n      provide(tabsRootContextKey, {\n        props,\n        currentName,\n        registerPane,\n        unregisterPane,\n      })\n    }\n\n    expose({\n      currentName,\n    })\n\n    return () => {\n      const newButton =\n        props.editable || props.addable ? (\n          <span\n            class={ns.e('new-tab')}\n            tabindex=\"0\"\n            onClick={handleTabAdd}\n            onKeydown={(ev: KeyboardEvent) => {\n              if (ev.code === EVENT_CODE.enter) handleTabAdd()\n            }}\n          >\n            <ElIcon class={ns.is('icon-plus')}>\n              <Plus />\n            </ElIcon>\n          </span>\n        ) : null\n\n      const header = (\n        <div class={[ns.e('header'), ns.is(props.tabPosition)]}>\n          {newButton}\n          <TabNav\n            ref={nav$}\n            currentName={currentName.value}\n            editable={props.editable}\n            type={props.type}\n            panes={orderedPanes.value}\n            stretch={props.stretch}\n            onTabClick={handleTabClick}\n            onTabRemove={handleTabRemove}\n          />\n        </div>\n      )\n\n      const panels = (\n        <div class={ns.e('content')}>{renderSlot(slots, 'default')}</div>\n      )\n\n      return (\n        <div\n          class={[\n            ns.b(),\n            ns.m(props.tabPosition),\n            {\n              [ns.m('card')]: props.type === 'card',\n              [ns.m('border-card')]: props.type === 'border-card',\n            },\n          ]}\n        >\n          {...props.tabPosition !== 'bottom'\n            ? [header, panels]\n            : [panels, header]}\n        </div>\n      )\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}