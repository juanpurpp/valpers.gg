{"ast":null,"code":"import { defineComponent, getCurrentInstance, inject, watch, onUnmounted, h } from 'vue';\nimport { isClient } from '@vueuse/core';\nimport '../../../../utils/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport useLayoutObserver from '../layout-observer.mjs';\nimport { removePopper } from '../util.mjs';\nimport { TABLE_INJECTION_KEY } from '../tokens.mjs';\nimport useRender from './render-helper.mjs';\nimport defaultProps from './defaults.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { removeClass, addClass } from '../../../../utils/dom/style.mjs';\nvar TableBody = defineComponent({\n  name: \"ElTableBody\",\n  props: defaultProps,\n\n  setup(props) {\n    const instance = getCurrentInstance();\n    const parent = inject(TABLE_INJECTION_KEY);\n    const ns = useNamespace(\"table\");\n    const {\n      wrappedRowRender,\n      tooltipContent,\n      tooltipTrigger\n    } = useRender(props);\n    const {\n      onColumnsChange,\n      onScrollableChange\n    } = useLayoutObserver(parent);\n    watch(props.store.states.hoverRow, (newVal, oldVal) => {\n      if (!props.store.states.isComplex.value || !isClient) return;\n      let raf = window.requestAnimationFrame;\n\n      if (!raf) {\n        raf = fn => window.setTimeout(fn, 16);\n      }\n\n      raf(() => {\n        const el = instance == null ? void 0 : instance.vnode.el;\n        const rows = Array.from((el == null ? void 0 : el.children) || []).filter(e => e == null ? void 0 : e.classList.contains(`${ns.e(\"row\")}`));\n        const oldRow = rows[oldVal];\n        const newRow = rows[newVal];\n\n        if (oldRow) {\n          removeClass(oldRow, \"hover-row\");\n        }\n\n        if (newRow) {\n          addClass(newRow, \"hover-row\");\n        }\n      });\n    });\n    onUnmounted(() => {\n      var _a;\n\n      (_a = removePopper) == null ? void 0 : _a();\n    });\n    return {\n      ns,\n      onColumnsChange,\n      onScrollableChange,\n      wrappedRowRender,\n      tooltipContent,\n      tooltipTrigger\n    };\n  },\n\n  render() {\n    const {\n      wrappedRowRender,\n      store\n    } = this;\n    const data = store.states.data.value || [];\n    return h(\"tbody\", {}, [data.reduce((acc, row) => {\n      return acc.concat(wrappedRowRender(row, acc.length));\n    }, [])]);\n  }\n\n});\nexport { TableBody as default };","map":{"version":3,"mappings":";;;;;;;;;;;AAgBA,gBAAeA,eAAe,CAAC;EAC7BC,IAAI,EAAE,aADuB;EAE7BC,KAAK,EAAEC,YAFsB;;EAG7BC,KAAK,CAACF,KAAD,EAAQ;IACX,MAAMG,QAAQ,GAAGC,kBAAkB,EAAnC;IACA,MAAMC,MAAM,GAAGC,MAAM,CAACC,mBAAD,CAArB;IACA,MAAMC,EAAE,GAAGC,YAAY,CAAC,OAAD,CAAvB;IACA,MAAM;MAAEC,gBAAF;MAAoBC,cAApB;MAAoCC;IAApC,IAAuDC,SAAS,CAACb,KAAD,CAAtE;IACA,MAAM;MAAEc,eAAF;MAAmBC;IAAnB,IAA0CC,iBAAiB,CAACX,MAAD,CAAjE;IACAY,KAAK,CAACjB,KAAK,CAACkB,KAAN,CAAYC,MAAZ,CAAmBC,QAApB,EAA8B,CAACC,MAAD,EAASC,MAAT,KAAoB;MACrD,IAAI,CAACtB,KAAK,CAACkB,KAAN,CAAYC,MAAZ,CAAmBI,SAAnB,CAA6BC,KAA9B,IAAuC,CAACC,QAA5C,EACE;MACF,IAAIC,GAAG,GAAGC,MAAM,CAACC,qBAAjB;;MACA,IAAI,CAACF,GAAL,EAAU;QACRA,GAAG,GAAIG,EAAD,IAAQF,MAAM,CAACG,UAAP,CAAkBD,EAAlB,EAAsB,EAAtB,CAAd;MACD;;MACDH,GAAG,CAAC,MAAM;QACR,MAAMK,EAAE,GAAG5B,QAAQ,IAAI,IAAZ,GAAmB,KAAK,CAAxB,GAA4BA,QAAQ,CAAC6B,KAAT,CAAeD,EAAtD;QACA,MAAME,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAW,CAACJ,EAAE,IAAI,IAAN,GAAa,KAAK,CAAlB,GAAsBA,EAAE,CAACK,QAA1B,KAAuC,EAAlD,EAAsDC,MAAtD,CAA8DC,CAAD,IAAOA,CAAC,IAAI,IAAL,GAAY,KAAK,CAAjB,GAAqBA,CAAC,CAACC,SAAF,CAAYC,QAAZ,CAAsB,GAAEhC,EAAE,CAAC8B,CAAH,CAAK,KAAL,CAAY,EAApC,CAAzF,CAAb;QACA,MAAMG,MAAM,GAAGR,IAAI,CAACX,MAAD,CAAnB;QACA,MAAMoB,MAAM,GAAGT,IAAI,CAACZ,MAAD,CAAnB;;QACA,IAAIoB,MAAJ,EAAY;UACVE,WAAW,CAACF,MAAD,EAAS,WAAT,CAAX;QACD;;QACD,IAAIC,MAAJ,EAAY;UACVE,QAAQ,CAACF,MAAD,EAAS,WAAT,CAAR;QACD;MACF,CAXE,CAAH;IAYD,CAnBI,CAAL;IAoBAG,WAAW,CAAC,MAAM;MAChB,IAAIC,EAAJ;;MACA,CAACA,EAAE,GAAGC,YAAN,KAAuB,IAAvB,GAA8B,KAAK,CAAnC,GAAuCD,EAAE,EAAzC;IACD,CAHU,CAAX;IAIA,OAAO;MACLtC,EADK;MAELM,eAFK;MAGLC,kBAHK;MAILL,gBAJK;MAKLC,cALK;MAMLC;IANK,CAAP;EAQD,CAzC4B;;EA0C7BoC,MAAM,GAAG;IACP,MAAM;MAAEtC,gBAAF;MAAoBQ;IAApB,IAA8B,IAApC;IACA,MAAM+B,IAAI,GAAG/B,KAAK,CAACC,MAAN,CAAa8B,IAAb,CAAkBzB,KAAlB,IAA2B,EAAxC;IACA,OAAO0B,CAAC,CAAC,OAAD,EAAU,EAAV,EAAc,CACpBD,IAAI,CAACE,MAAL,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;MACxB,OAAOD,GAAG,CAACE,MAAJ,CAAW5C,gBAAgB,CAAC2C,GAAD,EAAMD,GAAG,CAACG,MAAV,CAA3B,CAAP;IACD,CAFD,EAEG,EAFH,CADoB,CAAd,CAAR;EAKD;;AAlD4B,CAAD,CAA9B","names":["defineComponent","name","props","defaultProps","setup","instance","getCurrentInstance","parent","inject","TABLE_INJECTION_KEY","ns","useNamespace","wrappedRowRender","tooltipContent","tooltipTrigger","useRender","onColumnsChange","onScrollableChange","useLayoutObserver","watch","store","states","hoverRow","newVal","oldVal","isComplex","value","isClient","raf","window","requestAnimationFrame","fn","setTimeout","el","vnode","rows","Array","from","children","filter","e","classList","contains","oldRow","newRow","removeClass","addClass","onUnmounted","_a","removePopper","render","data","h","reduce","acc","row","concat","length"],"sources":["../../../../../../../packages/components/table/src/table-body/index.ts"],"sourcesContent":["// @ts-nocheck\nimport {\n  defineComponent,\n  getCurrentInstance,\n  h,\n  inject,\n  onUnmounted,\n  watch,\n} from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { addClass, removeClass } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport useLayoutObserver from '../layout-observer'\nimport { removePopper } from '../util'\nimport { TABLE_INJECTION_KEY } from '../tokens'\nimport useRender from './render-helper'\nimport defaultProps from './defaults'\n\nimport type { VNode } from 'vue'\n\nexport default defineComponent({\n  name: 'ElTableBody',\n  props: defaultProps,\n  setup(props) {\n    const instance = getCurrentInstance()\n    const parent = inject(TABLE_INJECTION_KEY)\n    const ns = useNamespace('table')\n    const { wrappedRowRender, tooltipContent, tooltipTrigger } =\n      useRender(props)\n    const { onColumnsChange, onScrollableChange } = useLayoutObserver(parent!)\n\n    watch(props.store.states.hoverRow, (newVal: any, oldVal: any) => {\n      if (!props.store.states.isComplex.value || !isClient) return\n      let raf = window.requestAnimationFrame\n      if (!raf) {\n        raf = (fn) => window.setTimeout(fn, 16)\n      }\n      raf(() => {\n        // just get first level children; fix #9723\n        const el = instance?.vnode.el as HTMLElement\n        const rows = Array.from(el?.children || []).filter((e) =>\n          e?.classList.contains(`${ns.e('row')}`)\n        )\n        const oldRow = rows[oldVal]\n        const newRow = rows[newVal]\n        if (oldRow) {\n          removeClass(oldRow, 'hover-row')\n        }\n        if (newRow) {\n          addClass(newRow, 'hover-row')\n        }\n      })\n    })\n\n    onUnmounted(() => {\n      removePopper?.()\n    })\n\n    return {\n      ns,\n      onColumnsChange,\n      onScrollableChange,\n      wrappedRowRender,\n      tooltipContent,\n      tooltipTrigger,\n    }\n  },\n  render() {\n    const { wrappedRowRender, store } = this\n    const data = store.states.data.value || []\n    return h('tbody', {}, [\n      data.reduce((acc: VNode[], row) => {\n        return acc.concat(wrappedRowRender(row, acc.length))\n      }, []),\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}