{"ast":null,"code":"import { defineComponent, inject, getCurrentInstance, ref, computed, unref, onMounted, reactive, onUnmounted, withDirectives, openBlock, createElementBlock, normalizeClass, normalizeStyle, vShow, createCommentVNode, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../tokens/index.mjs';\nimport { carouselItemProps } from './carousel-item.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { carouselContextKey } from '../../../tokens/carousel.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { isUndefined } from '../../../utils/types.mjs';\nconst COMPONENT_NAME = \"ElCarouselItem\";\nconst CARD_SCALE = 0.83;\n\nconst __default__ = defineComponent({\n  name: \"ElCarouselItem\"\n});\n\nconst _sfc_main = /* @__PURE__ */defineComponent({ ...__default__,\n  props: carouselItemProps,\n\n  setup(__props) {\n    const props = __props;\n    const ns = useNamespace(\"carousel\");\n    const carouselContext = inject(carouselContextKey);\n    const instance = getCurrentInstance();\n\n    if (!carouselContext) {\n      debugWarn(COMPONENT_NAME, \"usage: <el-carousel></el-carousel-item></el-carousel>\");\n    }\n\n    if (!instance) {\n      debugWarn(COMPONENT_NAME, \"compositional hook can only be invoked inside setups\");\n    }\n\n    const hover = ref(false);\n    const translate = ref(0);\n    const scale = ref(1);\n    const active = ref(false);\n    const ready = ref(false);\n    const inStage = ref(false);\n    const animating = ref(false);\n    const {\n      isCardType,\n      isVertical\n    } = carouselContext;\n    const itemStyle = computed(() => {\n      const translateType = `translate${unref(isVertical) ? \"Y\" : \"X\"}`;\n      const _translate = `${translateType}(${unref(translate)}px)`;\n      const _scale = `scale(${unref(scale)})`;\n      const transform = [_translate, _scale].join(\" \");\n      return {\n        transform\n      };\n    });\n\n    function processIndex(index, activeIndex, length) {\n      const lastItemIndex = length - 1;\n      const prevItemIndex = activeIndex - 1;\n      const nextItemIndex = activeIndex + 1;\n      const halfItemIndex = length / 2;\n\n      if (activeIndex === 0 && index === lastItemIndex) {\n        return -1;\n      } else if (activeIndex === lastItemIndex && index === 0) {\n        return length;\n      } else if (index < prevItemIndex && activeIndex - index >= halfItemIndex) {\n        return length + 1;\n      } else if (index > nextItemIndex && index - activeIndex >= halfItemIndex) {\n        return -2;\n      }\n\n      return index;\n    }\n\n    function calcCardTranslate(index, activeIndex) {\n      var _a;\n\n      const parentWidth = ((_a = carouselContext.root.value) == null ? void 0 : _a.offsetWidth) || 0;\n\n      if (inStage.value) {\n        return parentWidth * ((2 - CARD_SCALE) * (index - activeIndex) + 1) / 4;\n      } else if (index < activeIndex) {\n        return -(1 + CARD_SCALE) * parentWidth / 4;\n      } else {\n        return (3 + CARD_SCALE) * parentWidth / 4;\n      }\n    }\n\n    function calcTranslate(index, activeIndex, isVertical2) {\n      const rootEl = carouselContext.root.value;\n      if (!rootEl) return 0;\n      const distance = (isVertical2 ? rootEl.offsetHeight : rootEl.offsetWidth) || 0;\n      return distance * (index - activeIndex);\n    }\n\n    const translateItem = (index, activeIndex, oldIndex) => {\n      var _a;\n\n      const _isCardType = unref(isCardType);\n\n      const carouselItemLength = (_a = carouselContext.items.value.length) != null ? _a : Number.NaN;\n      const isActive = index === activeIndex;\n\n      if (!_isCardType && !isUndefined(oldIndex)) {\n        animating.value = isActive || index === oldIndex;\n      }\n\n      if (!isActive && carouselItemLength > 2 && carouselContext.loop) {\n        index = processIndex(index, activeIndex, carouselItemLength);\n      }\n\n      const _isVertical = unref(isVertical);\n\n      active.value = isActive;\n\n      if (_isCardType) {\n        if (_isVertical) {\n          debugWarn(\"Carousel\", \"vertical direction is not supported for card mode\");\n        }\n\n        inStage.value = Math.round(Math.abs(index - activeIndex)) <= 1;\n        translate.value = calcCardTranslate(index, activeIndex);\n        scale.value = unref(active) ? 1 : CARD_SCALE;\n      } else {\n        translate.value = calcTranslate(index, activeIndex, _isVertical);\n      }\n\n      ready.value = true;\n    };\n\n    function handleItemClick() {\n      if (carouselContext && unref(isCardType)) {\n        const index = carouselContext.items.value.findIndex(({\n          uid\n        }) => uid === instance.uid);\n        carouselContext.setActiveItem(index);\n      }\n    }\n\n    onMounted(() => {\n      carouselContext.addItem({\n        props,\n        states: reactive({\n          hover,\n          translate,\n          scale,\n          active,\n          ready,\n          inStage,\n          animating\n        }),\n        uid: instance.uid,\n        translateItem\n      });\n    });\n    onUnmounted(() => {\n      carouselContext.removeItem(instance.uid);\n    });\n    return (_ctx, _cache) => {\n      return withDirectives((openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass([unref(ns).e(\"item\"), unref(ns).is(\"active\", active.value), unref(ns).is(\"in-stage\", inStage.value), unref(ns).is(\"hover\", hover.value), unref(ns).is(\"animating\", animating.value), {\n          [unref(ns).em(\"item\", \"card\")]: unref(isCardType)\n        }]),\n        style: normalizeStyle(unref(itemStyle)),\n        onClick: handleItemClick\n      }, [unref(isCardType) ? withDirectives((openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass(unref(ns).e(\"mask\"))\n      }, null, 2)), [[vShow, !active.value]]) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\")], 6)), [[vShow, ready.value]]);\n    };\n  }\n\n});\n\nvar CarouselItem = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/carousel/src/carousel-item.vue\"]]);\n\nexport { CarouselItem as default };","map":{"version":3,"mappings":"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","names":["name","useNamespace","inject","carouselContextKey","instance","getCurrentInstance","carouselContext","debugWarn","COMPONENT_NAME","ref","isCardType","isVertical","computed","translateType","unref","_translate","translate","scale","transform","_scale","join","activeIndex","length","lastItemIndex","prevItemIndex","nextItemIndex","halfItemIndex","index","isVertical2","rootEl","oldIndex","_isCardType","carouselItemLength","value","_a","Number","animating","isActive","_isVertical","active","inStage","Math","round","CARD_SCALE","calcTranslate","ready","uid","onMounted","props","states","hover","translateItem","onUnmounted"],"sources":["../../../../../../packages/components/carousel/src/carousel-item.vue"],"sourcesContent":["<template>\n  <div\n    v-show=\"ready\"\n    :class=\"[\n      ns.e('item'),\n      ns.is('active', active),\n      ns.is('in-stage', inStage),\n      ns.is('hover', hover),\n      ns.is('animating', animating),\n      { [ns.em('item', 'card')]: isCardType },\n    ]\"\n    :style=\"itemStyle\"\n    @click=\"handleItemClick\"\n  >\n    <div v-if=\"isCardType\" v-show=\"!active\" :class=\"ns.e('mask')\" />\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  getCurrentInstance,\n  inject,\n  onMounted,\n  onUnmounted,\n  reactive,\n  ref,\n  unref,\n} from 'vue'\nimport { debugWarn, isUndefined } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { carouselContextKey } from '@element-plus/tokens'\nimport { carouselItemProps } from './carousel-item'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElCarouselItem',\n})\n\nconst props = defineProps(carouselItemProps)\nconst ns = useNamespace('carousel')\nconst COMPONENT_NAME = 'ElCarouselItem'\n// inject\nconst carouselContext = inject(carouselContextKey)!\n// instance\nconst instance = getCurrentInstance()!\nif (!carouselContext) {\n  debugWarn(\n    COMPONENT_NAME,\n    'usage: <el-carousel></el-carousel-item></el-carousel>'\n  )\n}\n\nif (!instance) {\n  debugWarn(\n    COMPONENT_NAME,\n    'compositional hook can only be invoked inside setups'\n  )\n}\n\nconst CARD_SCALE = 0.83\n\nconst hover = ref(false)\nconst translate = ref(0)\nconst scale = ref(1)\nconst active = ref(false)\nconst ready = ref(false)\nconst inStage = ref(false)\nconst animating = ref(false)\n\n// computed\nconst { isCardType, isVertical } = carouselContext\n\nconst itemStyle = computed<CSSProperties>(() => {\n  const translateType = `translate${unref(isVertical) ? 'Y' : 'X'}`\n  const _translate = `${translateType}(${unref(translate)}px)`\n  const _scale = `scale(${unref(scale)})`\n  const transform = [_translate, _scale].join(' ')\n\n  return {\n    transform,\n  }\n})\n\n// methods\n\nfunction processIndex(index: number, activeIndex: number, length: number) {\n  const lastItemIndex = length - 1\n  const prevItemIndex = activeIndex - 1\n  const nextItemIndex = activeIndex + 1\n  const halfItemIndex = length / 2\n\n  if (activeIndex === 0 && index === lastItemIndex) {\n    return -1\n  } else if (activeIndex === lastItemIndex && index === 0) {\n    return length\n  } else if (index < prevItemIndex && activeIndex - index >= halfItemIndex) {\n    return length + 1\n  } else if (index > nextItemIndex && index - activeIndex >= halfItemIndex) {\n    return -2\n  }\n  return index\n}\n\nfunction calcCardTranslate(index: number, activeIndex: number) {\n  const parentWidth = carouselContext.root.value?.offsetWidth || 0\n  if (inStage.value) {\n    return (parentWidth * ((2 - CARD_SCALE) * (index - activeIndex) + 1)) / 4\n  } else if (index < activeIndex) {\n    return (-(1 + CARD_SCALE) * parentWidth) / 4\n  } else {\n    return ((3 + CARD_SCALE) * parentWidth) / 4\n  }\n}\n\nfunction calcTranslate(\n  index: number,\n  activeIndex: number,\n  isVertical: boolean\n) {\n  const rootEl = carouselContext.root.value\n  if (!rootEl) return 0\n\n  const distance = (isVertical ? rootEl.offsetHeight : rootEl.offsetWidth) || 0\n  return distance * (index - activeIndex)\n}\n\nconst translateItem = (\n  index: number,\n  activeIndex: number,\n  oldIndex?: number\n) => {\n  const _isCardType = unref(isCardType)\n  const carouselItemLength = carouselContext.items.value.length ?? Number.NaN\n\n  const isActive = index === activeIndex\n  if (!_isCardType && !isUndefined(oldIndex)) {\n    animating.value = isActive || index === oldIndex\n  }\n\n  if (!isActive && carouselItemLength > 2 && carouselContext.loop) {\n    index = processIndex(index, activeIndex, carouselItemLength)\n  }\n\n  const _isVertical = unref(isVertical)\n  active.value = isActive\n\n  if (_isCardType) {\n    if (_isVertical) {\n      debugWarn('Carousel', 'vertical direction is not supported for card mode')\n    }\n    inStage.value = Math.round(Math.abs(index - activeIndex)) <= 1\n    translate.value = calcCardTranslate(index, activeIndex)\n    scale.value = unref(active) ? 1 : CARD_SCALE\n  } else {\n    translate.value = calcTranslate(index, activeIndex, _isVertical)\n  }\n\n  ready.value = true\n}\n\nfunction handleItemClick() {\n  if (carouselContext && unref(isCardType)) {\n    const index = carouselContext.items.value.findIndex(\n      ({ uid }) => uid === instance.uid\n    )\n    carouselContext.setActiveItem(index)\n  }\n}\n\n// lifecycle\nonMounted(() => {\n  carouselContext.addItem({\n    props,\n    states: reactive({\n      hover,\n      translate,\n      scale,\n      active,\n      ready,\n      inStage,\n      animating,\n    }),\n    uid: instance.uid,\n    translateItem,\n  })\n})\n\nonUnmounted(() => {\n  carouselContext.removeItem(instance.uid)\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}